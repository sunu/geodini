{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geodini.fullname" . }}-frontend
  labels:
    {{- include "geodini.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "geodini.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "geodini.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "geodini.serviceAccountName" . }}
      securityContext:
        {}
      containers:
        - name: frontend
          securityContext:
            {}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          command:
            - "streamlit"
            - "run"
            - "frontend/app.py"
            - "--server.port"
            - {{ .Values.frontend.port | quote }}
            - "--server.address"
            - "0.0.0.0"
            - "--server.headless"
            - "true"
            - "--browser.gatherUsageStats"
            - "false"
          ports:
            - name: http
              containerPort: {{ .Values.frontend.port }}
              protocol: TCP
          env:
            - name: API_URL
              value: {{ .Values.frontend.env.API_URL | quote }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
{{- end }}