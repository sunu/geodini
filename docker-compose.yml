services:
  init-ingest-data:
    build:
      context: .
    volumes:
      - ./geodini:/app/geodini
      - ./data:/app/data
    environment:
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - DATA_PATH=/app/data
    command: ["python", "geodini/ingest.py"]

  api:
    build:
      context: .
    ports:
      - "29000:9000"
    environment:
      - PORT=9000
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - DATA_PATH=/app/data
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DISABLE_CACHE=${DISABLE_CACHE:-false}
    env_file:
      - .env
    volumes:
      - ./geodini:/app/geodini
      - ./data:/app/data

    command:
      [
        "uvicorn",
        "geodini.api.api:app",
        "--host",
        "0.0.0.0",
        "--port",
        "9000",
        "--reload",
      ]
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      init-ingest-data:
        condition: service_completed_successfully

  mcp:
    build:
      context: .
    ports:
      - "29001:9001"
    environment:
      - PORT=9001
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DISABLE_CACHE=${DISABLE_CACHE:-false}
    env_file:
      - .env
    volumes:
      - ./geodini:/app/geodini
      - ./data:/app/data
    command: ["python", "geodini/api/mcp_server.py"]
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: .
    ports:
      - "20080:8501"
    volumes:
      - ./frontend:/app/frontend
      - ./geodini:/app/geodini
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=watchdog
    command: ["streamlit", "run", "frontend/app.py", "--server.port=8501", "--server.address=0.0.0.0", "--server.fileWatcherType=watchdog"]
    depends_on:
      - api

  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./data1/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    image: postgis/postgis:17-3.4
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
